name: Deployment

on:
  push:
    branches:
      - main  # develop 브랜치에 푸시될 때만 작동

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Set up Google Cloud SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Get modified files(product/src 파일 안에 수정된 파일들만 필터링)
      - name: Get changed files
        id: filter
        uses: dorny/paths-filter@v2
        with:
          list-files: shell
          filters: |
            src:
              - 'product/src/**/*' 

      # Deploy the Cloud Functions
      - name: Deploy Cloud Functions
        run: |
          modified_files=()
          modified_dirs=()

          if [[ "${{ steps.filter.outputs.src }}" == "true" ]]; then
              modified_files=($(echo "${{ steps.filter.outputs.src_files }}" | tr ',' ' '))

              for file in "${modified_files[@]}"; do
                src_dir=$(dirname "$file")  # product/src 디렉토리 가져오기
                modified_dirs+=("$src_dir")
              done
          fi

          # 중복된 디렉토리 제거
          modified_dirs=($(printf "%s\n" "${modified_dirs[@]}" | sort -u))

          # 수정된 디렉토리들에 대해 Cloud Function을 배포
          for dir in "${modified_dirs[@]}"; do
            function_name=$(basename "$dir")  # 함수 이름 가져오기
            echo "Deploying function: $function_name from directory: $dir"
            gcloud functions deploy ${function_name} \
              --region us-central1 \
              --runtime nodejs20 \
              --source "$dir" \
              --entry-point ${function_name} \
              --trigger-http \
              --allow-unauthenticated \
              --timeout 60 \
              --max-instances 1 \
              --no-gen2

            echo "Function $function_name deployed successfully."
          done
