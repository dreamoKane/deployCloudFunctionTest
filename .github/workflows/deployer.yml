name: Deployment

on:
  push:
    branches:
      - main

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Set up Google Cloud SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Get modified files
      - name: Get changed files
        id: filter
        uses: dorny/paths-filter@v2
        with:
          list-files: shell
          filters: |
            src:
              - 'src/**/*.js'

      # Deploy the Cloud Functions
      - name: Deploy Cloud Functions
        if: ${{ steps.filter.outputs.src == 'true' }}
        run: |
          modified_files=($(echo "${{ steps.filter.outputs.src_files }}" | tr ',' '\n'))
          echo "Modified files: ${modified_files[@]}"

          for file in "${modified_files[@]}"; do
            if [[ "$file" == *.js ]]; then
              deploy_dir=$(mktemp -d)
              function_name=$(basename "$file" .js)

              echo "Deploying Function: ${function_name}"

              cp ./develop_config/{*,.*} "$deploy_dir/" 2>/dev/null
              cp "$file" "$deploy_dir/index.js"

              echo "Contents of deploy_dir:"
              ls -la "$deploy_dir"

              gcloud functions deploy "$function_name" \
                --region us-central1 \
                --runtime nodejs20 \
                --source "$deploy_dir" \
                --entry-point "$function_name" \
                --trigger-http \
                --allow-unauthenticated \
                --timeout 60 \
                --max-instances 1 \
                --no-gen2

              rm -rf "$deploy_dir"
            fi
          done
